name: CI/CD Pipeline â€“ Fleetguard

on:
  push:
    branches: [ main ]
  workflow_dispatch:

########################
# 1 TESTS + SONARCLOUD
########################
jobs:
  quality-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: m2

      - name: SonarCloud analysis
        run: |
          mvn -B verify sonar:sonar \
            -Dsonar.projectKey=JefersonAlexander_Fleetguard_EV02_Back \
            -Dsonar.organization=jefersonalexander \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#####################################
# 2 BUILD / PUSH / DEPLOY POR SERVICIO
#####################################
  build-push-deploy:
    needs: quality-check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [microservice-authentication, microservice-fleetLocation, api-gateway, discovery-server]
    environment: staging

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: m2

      # ---------- BUILD ----------
      - name: Package ${{ matrix.service }}
        working-directory: ${{ matrix.service }}
        run: mvn -B package -DskipTests

      # ---------- DOCKER HUB ----------
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build & Push image
        run: |
          SERVICE=${{ matrix.service }}
          IMAGE_NAME=$(echo "$SERVICE" | tr '[:upper:]' '[:lower:]')
          IMAGE=jefersonalexander/$IMAGE_NAME:latest
          docker build -t $IMAGE $SERVICE
          docker push $IMAGE
      
      # ---------- GCP ----------
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
      
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
      
      - name: Deploy to Cloud Run
        run: |
          SERVICE=${{ matrix.service }}
          IMAGE_NAME=$(echo "$SERVICE" | tr '[:upper:]' '[:lower:]')
          IMAGE=jefersonalexander/$IMAGE_NAME:latest
          REGION=us-central1
          SERVICE_CLOUDRUN=$IMAGE_NAME
          gcloud run deploy $SERVICE_CLOUDRUN \
            --image $IMAGE \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated \
            --memory 512Mi
